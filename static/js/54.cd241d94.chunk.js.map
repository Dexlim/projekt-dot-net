{"version":3,"file":"static/js/54.cd241d94.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/Pizza/Extras.module.css?0b5e","components/Pizza/Extras.js","webpack://react-complete-guide/./src/components/Pizza/PizzaList.module.css?d6b3","components/Pizza/PizzaList.js","webpack://react-complete-guide/./src/components/Pizza/CategoryNav.module.css?c527","components/Pizza/CategoryNav.js","webpack://react-complete-guide/./src/components/Pizza/MealsList.module.css?734d","components/Pizza/MealsList.js","pages/Menu.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Extras_backdrop__eOKNH\",\"extramodal\":\"Extras_extramodal__kYsRv\",\"close\":\"Extras_close__S4wVh\",\"foodcontainer\":\"Extras_foodcontainer__4Yddi\",\"imageoverlay\":\"Extras_imageoverlay__-W2ko\",\"fooddesc\":\"Extras_fooddesc__RYP6R\",\"control\":\"Extras_control__JTNs9\",\"confirm\":\"Extras_confirm__tE2oL\",\"ingredient-list\":\"Extras_ingredient-list__DfPfm\",\"ingredient\":\"Extras_ingredient__pF6xu\",\"btn-container\":\"Extras_btn-container__c9z+1\",\"pizzasize\":\"Extras_pizzasize__O6f-7\",\"controls\":\"Extras_controls__9yA+1\"};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\nimport styles from \"./Extras.module.css\";\r\n\r\nconst ExtrasBackdrop = (props) => {\r\n  return (\r\n    <div className={styles.backdrop} onClick={props.closeModal}>\r\n      <button onClick={props.closeModal} className={styles.close}>\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ExtrasModalOverlay = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [itemAmount, setItemAmount] = useState(1);\r\n  const [clientPizzaPrice, setClientPizzaPrice] = useState(props.price);\r\n  const [choosenIngredients, setChoosenIngredients] = useState([]);\r\n  const [availableIngredients, setAvailableIngredients] = useState();\r\n  const [selectState, setSelectState] = useState(\"small\");\r\n\r\n  const [ingredientList, setIngredientList] = useState(\"\"); // do wyswietlania w opisie produktu\r\n  const [fullName, setfullName] = useState(props.name + \" 32cm\");\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await fetch(\"https://localhost:44376/api/Ingredients\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error();\r\n      }\r\n\r\n      const data = await response.json();\r\n      data[0].amount = 1;\r\n      setChoosenIngredients([data[0]]);\r\n      setAvailableIngredients(data);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.type === \"Pizza\") fetchData();\r\n    else setfullName(props.name);\r\n  }, []);\r\n\r\n  const addIngredient = (ingredient) => {\r\n    let updatedIngredients = [...choosenIngredients];\r\n\r\n    const existingIngredientIndex = updatedIngredients.findIndex(\r\n      (item) => item.ingredientId === ingredient.ingredientId\r\n    );\r\n\r\n    const existingIngredient = choosenIngredients[existingIngredientIndex];\r\n\r\n    if (!existingIngredient) {\r\n      let newIngredient = {\r\n        ...ingredient,\r\n        amount: 1,\r\n      };\r\n      updatedIngredients = [...choosenIngredients, newIngredient];\r\n    } else {\r\n      let updatedIngredient = {\r\n        ...existingIngredient,\r\n        amount: (existingIngredient.amount += 1),\r\n      };\r\n      updatedIngredients[existingIngredientIndex] = updatedIngredient;\r\n    }\r\n\r\n    setChoosenIngredients(updatedIngredients);\r\n    setClientPizzaPrice((prev) => (prev += ingredient.price));\r\n\r\n    let ingList = updatedIngredients\r\n      .filter((x) => x.ingredientType === \"extra\")\r\n      .map(\r\n        (x) =>\r\n          x.ingredientName +\r\n          \" x\" +\r\n          x.amount +\r\n          \"(\" +\r\n          (x.amount * x.price).toFixed(2) +\r\n          \"zł), \"\r\n      )\r\n      .join(\"\")\r\n      .slice(0, -2);\r\n    setIngredientList(ingList);\r\n  };\r\n\r\n  const removeIngredient = (ingredient) => {\r\n    let updatedIngredients = [...choosenIngredients];\r\n\r\n    const existingIngredientIndex = updatedIngredients.findIndex(\r\n      (item) => item.ingredientId === ingredient.ingredientId\r\n    );\r\n\r\n    const existingIngredient = choosenIngredients[existingIngredientIndex];\r\n\r\n    if (existingIngredient) {\r\n      let updatedIngredient = {\r\n        ...existingIngredient,\r\n        amount: (existingIngredient.amount -= 1),\r\n      };\r\n      if (updatedIngredient.amount <= 0) {\r\n        updatedIngredients.splice(existingIngredientIndex);\r\n      } else {\r\n        updatedIngredients[existingIngredientIndex] = updatedIngredient;\r\n      }\r\n      setChoosenIngredients(updatedIngredients);\r\n      setClientPizzaPrice((prev) => (prev -= ingredient.price));\r\n      let ingList = updatedIngredients\r\n        .filter((x) => x.ingredientType === \"extra\")\r\n        .map(\r\n          (x) =>\r\n            x.ingredientName +\r\n            \" x\" +\r\n            x.amount +\r\n            \"(\" +\r\n            (x.amount * x.price).toFixed(2) +\r\n            \"zł), \"\r\n        )\r\n        .join(\"\")\r\n        .slice(0, -2);\r\n      setIngredientList(ingList);\r\n    }\r\n  };\r\n\r\n  const returnCurrentAmount = (id) => {\r\n    const existingIngredientIndex = [...choosenIngredients].findIndex(\r\n      (item) => item.ingredientId === id\r\n    );\r\n\r\n    const existingIngredient = choosenIngredients[existingIngredientIndex];\r\n\r\n    if (existingIngredient) {\r\n      return existingIngredient.amount;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    function dynamicSort(property) {\r\n      return function (a, b) {\r\n        return a[property] < b[property]\r\n          ? -1\r\n          : a[property] > b[property]\r\n          ? 1\r\n          : 0;\r\n      };\r\n    }\r\n    let submitingredients = choosenIngredients;\r\n    submitingredients.sort(dynamicSort(\"ingredientId\"));\r\n\r\n    cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,\r\n      price: clientPizzaPrice.toFixed(2),\r\n      amount: itemAmount,\r\n      type: props.type,\r\n      extras: submitingredients,\r\n    });\r\n\r\n    props.closeModal();\r\n  };\r\n\r\n  const valueChangedHandler = (event) => {\r\n    let updatedIngredients = [...choosenIngredients];\r\n\r\n    const existingIngredientIndex = 0;\r\n\r\n    const existingIngredient = choosenIngredients[existingIngredientIndex];\r\n    const oldPrice = existingIngredient.price;\r\n    let updatedIngredient = existingIngredient;\r\n    if (event.target.value === \"small\")\r\n      updatedIngredient = {\r\n        ingredientId: availableIngredients[0].ingredientId,\r\n        ingredientName: \"32cm\",\r\n        price: 0,\r\n        amount: 1,\r\n      };\r\n    if (event.target.value === \"medium\")\r\n      updatedIngredient = {\r\n        ingredientId: availableIngredients[1].ingredientId,\r\n        ingredientName: \"46cm\",\r\n        price: 6,\r\n        amount: 1,\r\n      };\r\n    if (event.target.value === \"big\")\r\n      updatedIngredient = {\r\n        ingredientId: availableIngredients[2].ingredientId,\r\n        ingredientName: \"52cm\",\r\n        price: 8,\r\n        amount: 1,\r\n      };\r\n    updatedIngredients[existingIngredientIndex] = updatedIngredient;\r\n\r\n    setChoosenIngredients(updatedIngredients);\r\n    setClientPizzaPrice((prev) => (prev += updatedIngredient.price - oldPrice));\r\n\r\n    let ingList = updatedIngredients\r\n      .filter((x) => x.ingredientType === \"extra\")\r\n      .map(\r\n        (x) =>\r\n          x.ingredientName +\r\n          \" x\" +\r\n          x.amount +\r\n          \"(\" +\r\n          (x.amount * x.price).toFixed(2) +\r\n          \"zł), \"\r\n      )\r\n      .join(\"\")\r\n      .slice(0, -2);\r\n    setIngredientList(ingList);\r\n    setSelectState(event.target.value);\r\n    setfullName(props.name + \" \" + updatedIngredient.ingredientName);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.extramodal}>\r\n      <div className={styles.foodcontainer}>\r\n        <img src={props.imgUrl} alt={props.name} />\r\n        <div className={styles.imageoverlay} />\r\n        <div className={styles.fooddesc}>\r\n          <h2>{fullName}</h2>\r\n          <p>{props.description}</p>\r\n          {props.type === \"Pizza\" && (\r\n            <p>\r\n              <b>Dodatki:</b>\r\n              <br />\r\n            </p>\r\n          )}\r\n          <p>{ingredientList}</p>\r\n          <h3>Ilość: {itemAmount}</h3>\r\n          <div className={styles.control}>\r\n            <button\r\n              onClick={() => {\r\n                if (itemAmount > 1) {\r\n                  setItemAmount(itemAmount - 1);\r\n                }\r\n              }}\r\n            >\r\n              -\r\n            </button>\r\n            <h1>{(itemAmount * clientPizzaPrice).toFixed(2)} zł</h1>\r\n            <button\r\n              onClick={() => {\r\n                setItemAmount(itemAmount + 1);\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles[\"ingredient-list\"]}>\r\n        {props.type == \"Pizza\" && <h1>Dodatki</h1>}\r\n        {availableIngredients &&\r\n          availableIngredients\r\n            .filter((x) => x.ingredientType === \"extra\")\r\n            .map((item) => (\r\n              <div className={styles.ingredient} key={item.ingredientId}>\r\n                <p>{item.ingredientName}</p>\r\n                <p>{item.price.toFixed(2)} zł</p>\r\n                <div className={styles[\"btn-container\"]}>\r\n                  <button onClick={() => removeIngredient(item)}>-</button>\r\n                  <p>{returnCurrentAmount(item.ingredientId)}</p>\r\n                  <button onClick={() => addIngredient(item)}>+</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        {props.type === \"Pizza\" && (\r\n          <select\r\n            onChange={valueChangedHandler}\r\n            value={selectState}\r\n            name=\"size\"\r\n            label=\"Rozmiar\"\r\n            className={styles.pizzasize}\r\n          >\r\n            <option value=\"small\">Średnia (32cm)</option>\r\n            <option value=\"medium\">Duża (46cm) +6.00zł</option>\r\n            <option value=\"big\">Gigant (52cm) +8.00zł</option>\r\n          </select>\r\n        )}\r\n        <button className={styles.confirm} onClick={submitHandler}>\r\n          Dodaj do koszyka\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Extras = (props) => {\r\n  const portalElement = document.getElementById(\"overlays\");\r\n\r\n  document.onkeydown = function (evt) {\r\n    if (evt.key === \"Escape\") {\r\n      props.closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <ExtrasBackdrop closeModal={props.closeModal} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ExtrasModalOverlay\r\n          id={props.id}\r\n          closeModal={props.closeModal}\r\n          imgUrl={props.imgUrl}\r\n          name={props.name}\r\n          description={props.description}\r\n          type={props.type}\r\n          price={props.price}\r\n          type={props.type}\r\n        >\r\n          {props.children}\r\n        </ExtrasModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Extras;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pizzalist\":\"PizzaList_pizzalist__zej6V\",\"pizzatext\":\"PizzaList_pizzatext__up8At\",\"imgHover\":\"PizzaList_imgHover__30azH\",\"btn\":\"PizzaList_btn__hB9Oy\"};","import React, { useContext, useState } from \"react\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Extras from \"./Extras\";\r\nimport styles from \"./PizzaList.module.css\";\r\n\r\nconst MealItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [showExtras, setShowExtras] = useState(false);\r\n\r\n  const showExtrasHandler = () => {\r\n    setShowExtras(true);\r\n  };\r\n\r\n  const closeExtrasHandler = () => {\r\n    setShowExtras(false);\r\n  };\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,\r\n      price: props.price,\r\n      amount: 1,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showExtras && (\r\n        <Extras\r\n          id = {props.id}\r\n          imgUrl={props.imgUrl}\r\n          name={props.name}\r\n          description={props.description}\r\n          price={props.price}\r\n          type={props.type}\r\n          closeModal={closeExtrasHandler}\r\n        />\r\n      )}\r\n      <li key={props.id} className={styles.pizzalist}>\r\n        <img src={props.imgUrl} alt={props.name} />\r\n        <div className={styles.pizzatext}>\r\n          <h2>{props.name}</h2>\r\n          <h3>{props.description}</h3>\r\n        </div>\r\n        <div className={styles.btn}>\r\n          {props.price} zł\r\n          <i onClick={showExtrasHandler} className=\"fas fa-plus\"></i>\r\n        </div>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"CategoryNav_ul__Hny-j\",\"liHover\":\"CategoryNav_liHover__Jh3+q\",\"active\":\"CategoryNav_active__7dXOB\",\"none\":\"CategoryNav_none__fYS3l\"};","import {useState} from 'react';\r\n\r\nimport styles from \"./CategoryNav.module.css\";\r\n\r\nconst CategoryNav = (props) => {\r\n  const [optionChosen,setOptionChosen] = useState(\"Pizza\");\r\n\r\n  return (\r\n    <ul className={styles.ul}>\r\n      <li key=\"1cat\" onClick={()=>{setOptionChosen(\"Pizza\"); props.filterChange(\"Pizza\");}} className={`${optionChosen===\"Pizza\" ? styles.active : \"\"}`}>Pizza</li>\r\n      <li key=\"2cat\" onClick={()=>{setOptionChosen(\"Makaron\"); props.filterChange(\"Makaron\");}} className={`${optionChosen===\"Makaron\" ? styles.active : \"\"}`}>Makaron</li>\r\n      <li key=\"3cat\" onClick={()=>{setOptionChosen(\"Salatki\"); props.filterChange(\"Salatka\");}} className={`${optionChosen===\"Salatki\" ? styles.active : \"\"}`}>Sałatki</li>\r\n      <li key=\"4cat\" onClick={()=>{setOptionChosen(\"Dzieciece\"); props.filterChange(\"Dzieciece\");}} className={`${optionChosen===\"Dzieciece\" ? styles.active : \"\"}`}>Menu dziecięce</li>\r\n      <li key=\"5cat\" onClick={()=>{setOptionChosen(\"Dodatki\"); props.filterChange(\"Dodatki\");}} className={`${optionChosen===\"Dodatki\" ? styles.active : \"\"}`}>Dodatki</li>\r\n      <li key=\"6cat\" onClick={()=>{setOptionChosen(\"Napoje\"); props.filterChange(\"Napoje\");}} className={`${optionChosen===\"Napoje\" ? styles.active : \"\"}`}>Napoje</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CategoryNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mealscard\":\"MealsList_mealscard__9nG6d\",\"menu\":\"MealsList_menu__mHaRT\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nimport MealItem from \"./PizzaList\";\r\nimport mealsList from \"./placeholderMeals\";\r\nimport CategoryNav from \"./CategoryNav\";\r\nimport Extras from \"./Extras\";\r\n\r\nimport styles from \"./MealsList.module.css\";\r\n\r\nconst MealsList = () => {\r\n  const [filter, setFilter] = useState(\"Pizza\");\r\n\r\n\r\n  const [mealsList, setMealsList] = useState();\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await fetch(\"https://localhost:44376/api/Products\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error();\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setMealsList(data);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const filterChangeHandler = (param) => {\r\n    setFilter(param);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={styles.menu}>\r\n      <CategoryNav filterChange={filterChangeHandler} />\r\n      <ul className={styles.mealscard}>\r\n        {mealsList &&\r\n          mealsList\r\n            .filter((meal) => meal.productType === filter)\r\n            .map((meal) => (\r\n              <MealItem\r\n                key={meal.productId}\r\n                id={meal.productId}\r\n                name={meal.productName}\r\n                type={filter}\r\n                description={meal.description}\r\n                price={meal.price}\r\n                imgUrl={meal.pictureUrl}\r\n              />\r\n            ))}\r\n        {!mealsList && <p>Menu jest aktualnie puste.</p>}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MealsList;\r\n","import MealsList from \"../components/Pizza/MealsList\";\r\n\r\nconst Menu = () => {\r\n  return <MealsList />;\r\n};\r\n\r\nexport default Menu;\r\n"],"names":["ExtrasBackdrop","props","className","styles","onClick","closeModal","ExtrasModalOverlay","cartCtx","useContext","CartContext","useState","itemAmount","setItemAmount","price","clientPizzaPrice","setClientPizzaPrice","choosenIngredients","setChoosenIngredients","availableIngredients","setAvailableIngredients","selectState","setSelectState","ingredientList","setIngredientList","name","fullName","setfullName","fetch","response","ok","Error","json","data","amount","console","log","message","useEffect","type","fetchData","returnCurrentAmount","id","existingIngredientIndex","findIndex","item","ingredientId","existingIngredient","src","imgUrl","alt","description","toFixed","filter","x","ingredientType","map","ingredientName","ingredient","updatedIngredients","updatedIngredient","splice","prev","ingList","join","slice","removeIngredient","newIngredient","addIngredient","onChange","event","oldPrice","target","value","label","preventDefault","property","submitingredients","sort","a","b","addItem","extras","portalElement","document","getElementById","onkeydown","evt","key","ReactDOM","children","showExtras","setShowExtras","optionChosen","setOptionChosen","filterChange","setFilter","mealsList","setMealsList","param","meal","productType","productId","productName","pictureUrl"],"sourceRoot":""}